import{_ as t,c as a,o,Q as s}from"./chunks/framework.2d37aa7a.js";const u=JSON.parse('{"title":"快照","description":"","frontmatter":{},"headers":[],"relativePath":"chromatic/snapshots.md","filePath":"chromatic/snapshots.md"}'),r={name:"chromatic/snapshots.md"},e=s('<h1 id="快照" tabindex="-1">快照 <a class="header-anchor" href="#快照" aria-label="Permalink to &quot;快照&quot;">​</a></h1><p>快照是Story的图像以及由 Chromatic 捕获云基础设施中的标准化浏览器捕获的一些元数据。快照功能用户界面测试和用户界面审查。</p><h2 id="快照是如何捕捉的" tabindex="-1">快照是如何捕捉的？ <a class="header-anchor" href="#快照是如何捕捉的" aria-label="Permalink to &quot;快照是如何捕捉的？&quot;">​</a></h2><details class="details custom-block"><summary>1. 将每个 Story 加载到浏览器视窗的指定位置</summary><p>Capture Cloud 导航到您发布的 Storybook。它使用我们的标准化浏览器群在您所需的视口并行加载所有 Story。</p></details><details class="details custom-block"><summary>2. 等待 Story 渲染</summary><p>Capture Cloud 使用底层浏览器 API 与我们自己的一套启发式方法相结合来确定组件何时“加载”。Chromatic 的主要启发方法之一是网络“静止”——网络不活动的一段时间，表示所有资源已加载。加载是当前可能的组件渲染时间的最接近的近似值。</p></details><details class="details custom-block"><summary>3. 截取屏幕截图并将其裁剪为 UI 尺寸</summary><p>Chromatic 会适应组件大小进行屏幕截图。它通过测量 Storybook 元素的子节点的边界框#storybook-root或#root以前版本的元素来确定裁剪尺寸。对于原子组件，裁剪可以消除快照周围的负空间，从而减少您必须查看的视觉信息。对于页面，Chromatic 捕获呈现的 UI 的完整宽度和高度。</p></details><details class="details custom-block"><summary>4. 保存快照以及构建或分支的先前基线快照之间的差异</summary><p>每个快照都与一个Story相关联，并用提交、分支和其他相关元数据标记。快照存储在 Chromatic 的云中。对于 UI 测试和 UI 审核，可以对快照进行视觉比较（差异）以识别更改。我们的基础设施能够有效地并行快照每个 Story，无论您有多少个 Story。</p></details>',7),c=[e];function i(l,m,d,h,n,p){return o(),a("div",null,c)}const y=t(r,[["render",i]]);export{u as __pageData,y as default};
